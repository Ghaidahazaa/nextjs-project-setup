version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
    command: npm run dev

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
    volumes:
      - ./backend:/app
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery
    command: celery -A backend worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
      - db

  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: celery_beat
    command: celery -A backend beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./backend:/app
    depends_on:
      - backend
      - redis
      - db

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: wateen
      POSTGRES_PASSWORD: wateenpassword
      POSTGRES_DB: wateendb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:6
    ports:
      - "6379:6379"

volumes:
  pgdata:
